<UserControl x:Class="VariantMeshEditor.Views.EditorViews.Animation.AnimationSplicerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VariantMeshEditor.Views.EditorViews.Animation" xmlns:filterdialog="clr-namespace:CommonDialogs.FilterDialog;assembly=CommonDialogs" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib" xmlns:editorviews="clr-namespace:VariantMeshEditor.Views.EditorViews" xmlns:mathviews="clr-namespace:CommonDialogs.MathViews;assembly=CommonDialogs"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            
            
   
        
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
            <TextBlock>Target Skeleton -></TextBlock>
            <TextBlock>Humanoid01</TextBlock>
        </StackPanel>


        <!-- Target animation-->
        <filterdialog:CollapsableFilterControl  
                SelectedItem="{Binding TargetAnimation.SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                SearchItems="{Binding TargetAnimation.CurrentItems, UpdateSourceTrigger=PropertyChanged}"     
                OnSearch="{Binding TargetAnimation.FilterItemOnSearch, UpdateSourceTrigger=PropertyChanged}"   
                IsManipulationEnabled="False"
                LabelTotalWidth="104"   
                DisplayMemberPath="FullPath"
                DockPanel.Dock="top"
                MaxHeight="400"
                LabelText="Target Anim">
            <filterdialog:CollapsableFilterControl.InnerContent>
                <CheckBox 
                        IsChecked="{Binding TargetAnimation.OnlyDisplayAnimationsForCurrentSkeleton, UpdateSourceTrigger=PropertyChanged}"
                        Content="Only list animations for current skeleton"/>
            </filterdialog:CollapsableFilterControl.InnerContent>
        </filterdialog:CollapsableFilterControl>


        <!-- External Skeleton -->
        <filterdialog:CollapsableFilterControl  
                SelectedItem="{Binding ExternalSkeleton.SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                SearchItems="{Binding ExternalSkeleton.SkeletonList, UpdateSourceTrigger=PropertyChanged}"     
                OnSearch="{Binding ExternalSkeleton.FilterItemOnSearch, UpdateSourceTrigger=PropertyChanged}"   
                IsManipulationEnabled="False"
                LabelTotalWidth="104"   
                DisplayMemberPath="FullPath"
                DockPanel.Dock="top"
                MaxHeight="400"
                LabelText="External Skeleton">
        </filterdialog:CollapsableFilterControl>

        <!-- External animation -->
        <filterdialog:CollapsableFilterControl  
                SelectedItem="{Binding ExternalAnimation.SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                SearchItems="{Binding ExternalAnimation.CurrentItems, UpdateSourceTrigger=PropertyChanged}"     
                OnSearch="{Binding ExternalAnimation.FilterItemOnSearch, UpdateSourceTrigger=PropertyChanged}"   
                IsManipulationEnabled="False"
                LabelTotalWidth="104"   
                DisplayMemberPath="FullPath"
                DockPanel.Dock="top"
                MaxHeight="400"
                LabelText="External Anim">
            <filterdialog:CollapsableFilterControl.InnerContent>
                <CheckBox 
                        IsChecked="{Binding ExternalAnimation.OnlyDisplayAnimationsForCurrentSkeleton, UpdateSourceTrigger=PropertyChanged}"
                        Content="Only list animations for current skeleton"/>
            </filterdialog:CollapsableFilterControl.InnerContent>
        </filterdialog:CollapsableFilterControl>


            <DockPanel DockPanel.Dock="Top">
                <TextBlock Text="Scale animation" Width="105" DockPanel.Dock="Left" Height="20"/>
                <TextBlock Text=" : " DockPanel.Dock="Left"/>
                <CheckBox DockPanel.Dock="Right" VerticalContentAlignment="Center"></CheckBox>
            </DockPanel>
            
            <DockPanel DockPanel.Dock="Top">
                <TextBlock Text="Copy only animation" Width="105" DockPanel.Dock="Left" Height="20"/>
                <TextBlock Text=" : " DockPanel.Dock="Left"/>
                <CheckBox DockPanel.Dock="Right" VerticalContentAlignment="Center"></CheckBox>
            </DockPanel>


            <DockPanel DockPanel.Dock="Top">
                <TextBlock Text="Merge type" Width="105" DockPanel.Dock="Left"/>
                <TextBlock Text=" : " DockPanel.Dock="Left"/>
                <ComboBox DockPanel.Dock="Right" >
                    <ComboBoxItem IsSelected="True">Replace</ComboBoxItem>
                    <ComboBoxItem>Loop</ComboBoxItem>
                    <ComboBoxItem>Time scale</ComboBoxItem>
                </ComboBox>
            </DockPanel>


            <DockPanel DockPanel.Dock="Top">
                <TextBlock Text="External skeleton " Width="105" DockPanel.Dock="Left" VerticalAlignment="Top" Height="20" />
                <TextBlock Text=" : " DockPanel.Dock="Left"/>

                <Expander DockPanel.Dock="Left">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" >
                            <CheckBox IsChecked="{Binding UseAnimation, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </Expander.Header>


                    <Grid DockPanel.Dock="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="300"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Offset"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text=":" Margin="3,0,3,0"/>
                        <mathviews:Vector3View 
                            Grid.Row="0" Grid.Column="3"  VerticalContentAlignment="Center"
                            Vector3="{Binding ExternalSkeletonSettings.SkeletonOffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                            FieldWidth="60"
                            NumbersMaxLength="80" />

                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Draw line"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" Text=":" Margin="3,0,3,0"/>
                        <CheckBox  Grid.Row="1" Grid.Column="2" />
                    </Grid>
                </Expander>

            </DockPanel>



            <Button DockPanel.Dock="Top" Command="{Binding ForceComputeCommand}">Test</Button>
        </DockPanel>

        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <TreeView Grid.Column="0" HorizontalContentAlignment="Stretch" 
                  ItemsSource="{Binding TargetSkeletonBones}" 
                  ItemContainerStyle="{StaticResource TreeViewItemStyle1}" >

                <i:Interaction.Behaviors>
                    <editorviews:BindableSelectedItemBehavior SelectedItem="{Binding SelectedNode, Mode=TwoWay}" />
                </i:Interaction.Behaviors>

                <TreeView.ItemTemplate>

                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock  Grid.Column="0" Text="{Binding OriginalBone.BoneName}"   />
                            <ComboBox  Width="150"  Grid.Column="2"  Margin="10,0,0,0"
                                   SelectedItem="{Binding MappedBone, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   ItemsSource="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=1}, Path=DataContext.ExternalSkeleton.SelectedSkeletonBonesFlattened}"
                                   DisplayMemberPath="BoneName">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=1}, Path=DataContext.ForceComputeCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <local:AnimationSplicerSelectedBoneEditor Grid.Column="1" Grid.Row="1" 
                                                      TargetBoneList="{Binding ExternalSkeleton.SelectedSkeletonBonesFlattened, UpdateSourceTrigger=PropertyChanged}"
                                                      TargetBoneListDisplayName="BoneName"
                                                      SelectedBone="{Binding SelectedNode, UpdateSourceTrigger=PropertyChanged}"/>

        </Grid>

    </Grid>
</UserControl>
