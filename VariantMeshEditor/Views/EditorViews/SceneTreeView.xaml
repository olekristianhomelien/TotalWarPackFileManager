<UserControl     x:Class="VariantMeshEditor.Views.EditorViews.SceneTreeView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Royale" 
    xmlns:util="clr-namespace:VariantMeshEditor.Views.Util" xmlns:editorviews="clr-namespace:VariantMeshEditor.Views.EditorViews"
                 FontSize="13" >
    <UserControl.Resources>
        <ResourceDictionary >

            <editorviews:TreeItemDataTemplateSelector x:Key="TreeItemDataTemplateSelector"/>
            
            <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
            </Style>
 
            <HierarchicalDataTemplate x:Key="DefaultTreeItemTemplate" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal" >
                    <util:OptionalRadioButton Style="{DynamicResource CheckBoxStyle1}" GroupName="{Binding CheckBoxGroupingName}" Focusable="False"  IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Visibility="{Binding ApplyElementCheckboxVisability}" />
                    <ContentPresenter  Content="{Binding Path=DisplayName, UpdateSourceTrigger=PropertyChanged}" Margin="2,0"/>
                </StackPanel>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="SlotTreeItemTemplate" ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal" >
                    <util:OptionalRadioButton Style="{DynamicResource CheckBoxStyle1}" GroupName="{Binding CheckBoxGroupingName}" Focusable="False"  IsChecked="{Binding IsChecked, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Visibility="{Binding ApplyElementCheckboxVisability}" />
                    <TextBlock  Text="{Binding Path=DisplayName, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" Margin="2,0"/>
                </StackPanel>
            </HierarchicalDataTemplate>

            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FFD2D4D2" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush>
                            <GradientStop Color="#FF004C94" Offset="0"/>
                            <GradientStop Color="#FF003C74" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="1" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type util:OptionalRadioButton}">
                            <BulletDecorator Background="Transparent" SnapsToDevicePixels="True">
                                <BulletDecorator.Bullet>
                                    <Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
                                </BulletDecorator.Bullet>
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="True">
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="2,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>



    <DockPanel>
        <TreeView 

          TreeViewItem.PreviewMouseDoubleClick="TreeViewItem_PreviewMouseDoubleClick"
          ItemContainerStyle="{StaticResource TreeViewItemStyle}"
          ItemsSource="{Binding Path=SceneGraphRootNodes, UpdateSourceTrigger=PropertyChanged}"
          ItemTemplateSelector="{StaticResource TreeItemDataTemplateSelector}">
            <i:Interaction.Behaviors>
                <editorviews:BindableSelectedItemBehavior SelectedItem="{Binding SelectedNode, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
        </TreeView>
    </DockPanel>
</UserControl>